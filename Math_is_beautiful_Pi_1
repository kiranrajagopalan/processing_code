/* The input file data.txt contains the first thousand digits of Pi seperated by comma (delimiter) */

int[] data;

void setup() {
  size(1000,700);
  smooth();
//  int centX = 250;
//  int centY = 150;
  // Load text file as a string
  String[] stuff = loadStrings(“data.txt”);
  // Convert string into an array of integers using ‘,’ as a delimiter
  data = int(split(stuff[0],’ ‘));
}

//size(500,300);
//background(255);
//strokeWeight(5);

//float radius = 100;

//stroke(0, 30);
//noFill();
//ellipse(centX,centY,radius*2,radius*2);
//stroke(20, 50, 70);
float x, y;
float prev_x = -999;
float prev_y = -999;
int alpha=0;
int alpha_value=30;

void draw() {
  background(255);
  stroke(0);
  
    //fill(data[i]);
    //rect(i*20,0,20,data[i]);
    //line(i,0,i,data[i]*10);
    int i=0,coord_x=500,coord_y=350;
    for (float ang = 0; ang <= 360; ang += .36) {
      float rad = radians(ang);
      x = 500 + (300 * cos(rad));
      y = 350 + (300 * sin(rad));
      
      //for (int i = 0; i < 50/*data.length*/; i++) {
        //print(data[i]);
        //noStroke();
        if (data[i]==1)
        {
          //fill(#F1C7DD,alpha_value);
          stroke(#F1C7DD,alpha_value);
          coord_x=524;coord_y=332;
          fill(#F1C7DD,alpha_value);
          //ellipse(coord_x,coord_y,3,3);          
        }
        else if (data[i]==2)
       {
        //fill(#827775,alpha_value);
        stroke(#827775,alpha_value);
        coord_x=509;coord_y=321;
        fill(#827775,alpha_value);
        //ellipse(coord_x,coord_y,3,3); 
       }
        else if (data[i]==3)
       {
        //fill(#B09977,alpha_value);
        stroke(#B09977,alpha_value);
        coord_x=491;coord_y=321;
        fill(#B09977,alpha_value);
        //ellipse(coord_x,coord_y,3,3); 
       }
       else if (data[i]==4)
       {
         //fill(#966EAC,alpha_value);
         stroke(#966EAC,alpha_value);
         coord_x=476;coord_y=332;
         fill(#966EAC,alpha_value);
         //ellipse(coord_x,coord_y,3,3); 
       }
       else if (data[i]==5)
       {
         //fill(#7BCBC0,alpha_value);
         stroke(#7BCBC0,alpha_value);
         coord_x=470;coord_y=350;
         fill(#7BCBC0,alpha_value);
         //ellipse(coord_x,coord_y,3,3);
       }
       else if(data[i]==6)
       {
         //fill(#B7CC94,alpha_value);
         stroke(#B7CC94,alpha_value);
         coord_x=476;coord_y=368;
         fill(#B7CC94,alpha_value);
         //ellipse(coord_x,coord_y,3,3);
       }
       else if(data[i]==7)
       {
         //fill(#E3337E,alpha_value);
         stroke(#E3337E,alpha_value);
         coord_x=491;coord_y=379;
         fill(#E3337E,alpha_value);
         //ellipse(coord_x,coord_y,3,3);
       }
       else if(data[i]==8)
       {
         //fill(#F05129,alpha_value);
         stroke(#F05129,alpha_value);
         coord_x=509;coord_y=379;
         fill(#F05129,alpha_value);
         //ellipse(coord_x,coord_y,3,3);
       }
       else if(data[i]==9)
       {
         //fill(#F5BD42,alpha_value);
         stroke(#F5BD42,alpha_value);
         coord_x=524;coord_y=368;
         fill(#F5BD42,alpha_value);
         //ellipse(coord_x,coord_y,3,3);
       }
       else if(data[i]==0)
       {
         //fill(#0B326B,alpha_value);
         stroke(#0B326B,alpha_value);
         coord_x=530;coord_y=350;
         fill(#0B326B,alpha_value);
         //ellipse(coord_x,coord_y,3,3);
       }
       
        
       //        fill(data[i]*10,data[i]*10,data[i]*10,alpha);
//      if(i==0)
//      {
//        fill(0);
//        ellipse(x,y,10,10);
//      }
     
      ellipse(x,y,2*data[i],2*data[i]);
      //ellipse(x,y,10*data[i],10*data[i]);
      //line(x,y,coord_x,coord_y);
      //line(x,y,prev_x,prev_y);
//      fill(255);
      
      //bezier(x, y, 500, 350, 500, 350, coord_x, coord_y);
      //fill(255,50);
      //ellipse(500,350,100,100);
      i++;
      prev_x=x;
      prev_y=y;
      //line(x,y,data[i],data[i]);
}
  }
  
  void mouseReleased() {
  save(“diagonal.tif”);
}

void saveHiRes(int scaleFactor) {
  PGraphics hires = createGraphics(width*scaleFactor, height*scaleFactor, JAVA2D);
  beginRecord(hires);
  hires.scale(scaleFactor);
  draw();
  endRecord();
  hires.save(“hires_4.png”);
}

void keyPressed() {
  if (key == ‘s’) {
    save(“normal.png”);
    saveHiRes(8);
    exit();
  }
}
